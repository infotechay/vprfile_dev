# name: Enable Auto Delete Head Branches

# on:
#   workflow_dispatch:

# jobs:
#   enable-auto-delete:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         repository: 
#           - "infotechay/Repo1"
#           # Add more repositories as needed

#     steps:
#       - name: Enable Automatically Delete Head Branches
#         id: enable-auto-delete
#         run: |
#           curl -X PATCH \
#             -H "Authorization: Bearer $GITHUB_TOKEN" \
#             -H "Accept: application/vnd.github+json" \
#             https://api.github.com/repos/${{ matrix.repository }} \
#             -d '{"delete_branch_on_merge": true}'


#           curl -X PATCH \
#             -H "Authorization: Bearer $GITHUB_TOKEN" \
#             -H "Accept: application/vnd.github+json" \
#              https://api.github.com/repos/infotechay/Repo1 \
#              -d '{"delete_branch_on_merge": true}'
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}






name: Enable Auto Delete Head Branches

on:
  workflow_dispatch:

jobs:
  enable-auto-delete:
    runs-on: ubuntu-latest
    steps:
      - name: Set Repository List
        id: set-repos
        run: |
          # Define your repositories here
          target_repositories=("infotechay/Repo1")
          echo "repos=${target_repositories[@]}" >> $GITHUB_ENV
          echo "Repositories to process:"
          for repo in "${target_repositories[@]}"; do
            echo $repo
          done

      - name: Enable Automatically Delete Head Branches
        id: enable-auto-delete
        run: |
          # Read repositories from environment
          IFS=' ' read -r -a repos <<< "$repos"
          for repo in "${repos[@]}"; do
            echo "Processing repository: $repo"
            curl -X PATCH \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/$repo \
              -d '{"delete_branch_on_merge": true}' || echo "Failed for $repo"
          done
        env:
          repos: ${{ env.repos }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}


