# # name: Use Environment Secrets

# # on:
# #   push:
# #     branches:
# #       - main
# #   workflow_dispatch:
  
# # jobs:
# #   use-environment-secrets:
# #     runs-on: ubuntu-latest

# #     # Specify the environment where the secrets are defined
# #     environment:
# #       name: Mysecret1

# #     steps:
# #       - name: Check Out Code
# #         uses: actions/checkout@v3

# #       - name: Use Environment Secrets
# #         env:
# #           SECRET_1: ${{ secrets.CRED1 }}
# #           SECRET_2: ${{ secrets.CRED2 }}
# #         run: |
# #           echo "Using environment secrets from Mysecret1"
# #           echo ${{secrets.CRED1}} | sed 's/./& /g' >> secrets.txt
# #           echo ${{secrets.CRED2}} | sed 's/./& /g' >> secrets.txt
# #           # Remove spaces and append to file
# #           # echo "$SECRET_1" | tr -d ' ' >> secrets.txt
# #           # echo "$SECRET_2" | tr -d ' ' >> secrets.txt

# #           # Display file content for verification
# #           echo "Secrets appended to file:"
# #           cat secrets.txt
# #           # tr -d ' ' < secrets.txt > temp.txt && mv temp.txt secrets.txt
# #           # echo "Secrets appended to file:--one more time "
# #           # cat secrets.txt




# name: Use Environment Secrets

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   use-environment-secrets:
#     runs-on: ubuntu-latest

#     # Specify the environment where the secrets are defined
#     environment:
#       name: Mysecret1

#     steps:
#       - name: Check Out Code
#         uses: actions/checkout@v3

#       - name: Set Secrets Dynamically
#         run: |
#           # List of secret names (add them here or get from documentation)
#           echo "SECRET_LIST=CRED1 CRED2" >> $GITHUB_ENV

#       - name: Process Each Secret
#         env:
#           SECRET_LIST: ${{ env.SECRET_LIST }}
#           CRED1: ${{ secrets.CRED1 }}
#           CRED2: ${{ secrets.CRED2 }}
#         run: |
#           echo "Processing secrets from environment: Mysecret1"
#           for SECRET_NAME in $SECRET_LIST; do
#             # Dynamically access the environment variable by name
#             SECRET_VALUE=$(eval echo "\$$SECRET_NAME")
#             echo "$SECRET_NAME=$SECRET_VALUE" | sed 's/./& /g' >> secrets.txt
#           done

#       - name: Display File Content
#         run: |
#           # tr -d ' ' < file1.txt > temp.txt && mv temp.txt secrets.txt
#           echo "Contents of secrets.txt:"
#           cat secrets.txt
      
#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.5.0

#       - name: Initialize Terraform
#         run: terraform init

#       - name: Plan Terraform Changes
#         run: |
#           terraform plan -var="github_token=${{ secrets.GITHUB_TOKEN }}" -var="github_owner=${{ secrets.GITHUB_OWNER }}" -var="target_repository=vprfile_dev" -var="target_environment=newsecrets"


#       - name: Apply Terraform Changes
#         env:
#           TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}
#           # TF_VAR_github_owner: ${{ secrets.GITHUB_OWNER }}
#           TF_VAR_github_owner: infotechay
#           # TF_VAR_target_repository: ${{ secrets.TARGET_REPOSITORY }}
#           # TF_VAR_target_environment: ${{ secrets.TARGET_ENVIRONMENT }}
#           TF_VAR_target_repository: vprfile_dev
#           TF_VAR_target_environment: newsecrets
#         run: |
#           pwd
#           ls -lrth
#           terraform apply -auto-approve


name: Use and Update Environment Secrets

on:
  push:
    branches:
      - master
      - production
      - non-prod
      - dev
  workflow_dispatch:

jobs:
  use-environment-secrets:
    runs-on: ubuntu-latest

    # Specify the environment where the secrets are defined##


    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Set Secrets Dynamically
        run: |
          echo "Hellow World"


      # # Update secrets in the target repository
      # - name: Install GitHub CLI
      #   run: sudo apt-get install -y gh

      # - name: Authenticate GitHub CLI
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: gh auth login --with-token <<< "${GITHUB_TOKEN}"

  # use-environment-secrets:
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Mysecret1
    
  #   steps:
  #     - name: Update Secrets in Target Repository
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         echo "Updating secrets in the target repository"
  #         while IFS='=' read -r SECRET_NAME SECRET_VALUE; do
  #           if [[ -n "$SECRET_NAME" && -n "$SECRET_VALUE" ]]; then
  #             echo "Setting $SECRET_NAME in the target repository"
  #             gh secret set "$SECRET_NAME" --body "$SECRET_VALUE" --repo infotechay/vprfile_dev --env newsecrets
  #           fi
  #         done < secrets.txt
